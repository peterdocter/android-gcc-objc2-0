#summary Current compiler support and issues.

= Details =

Properties:
  * @property seems to work just fine
  * nonatomic and atomic
  * assign, copy, retain work (granted that requires a NSCopying protocol for copying)
  * getter/setters have not been tested yet
  * @synthesize works 
  * @dynamic has not been tested (but should work since @synthesize does)

Classes:
  * @private works for ivars
  * direct ivar access has not been tested (but it should work since its fairly similar to properties code wise in the compiler)

Protocols:
  * libobjc needs some overhauling to support protocols better (need to re-do libobjc to update to more apple-esque versions)
  * the initial protocol concept works, however there is no identifier for class conformance to a given protocol (properly atleast)

Blocks:
  * Blocks work in c
  * Blocks still need testing in c++, objc, and obj-c++

Fast enumeration (foreach/for-in):
  * Not yet tested at all (also not sure if they compile yet)

= Issues =
Xcode Integration:
 * gcc is missing the flag -single_module
 * ~~ld does not play nice with -filelist option (temporarily fixed with perl script)~~ _no longer needed; ld now responds properly to filelist_
 * linkage for dynamic libraries (elf so) binds to crt0 with references in `_start` using `main` (workaround for dynamic libs: use `-shared` option, which should be triggered automatically when `-dynamic` is flagged, but currently is not)

libobjc compatibility:
 * The current version of libobjc is still the old 1.0 GNU version.
 * There is a branch of the library that contains some newer code.
 * This still needs testing and building.